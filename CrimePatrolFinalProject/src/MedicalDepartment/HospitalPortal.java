/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MedicalDepartment;

import PoliceDepartment.Case;
import PoliceDepartment.CasePortalDispatcher;
import PoliceDepartment.Precinct;
import crimepatrolfinalproject.SysAdminJFrame1;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Hospital;
import model.Location;
import utilPackage.Helper;
import utilPackage.SendNotification;
import utilPackage.ValidationHelper;

/**
 *
 * @author bashu
 */
public class HospitalPortal extends javax.swing.JFrame {

    /**
     * Creates new form HospitalJFrame
     */
    public HospitalPortal() {
        initComponents();
        hospitalIdTextField.disable();
        try {
          
            List<Hospital> objList = Helper.getResultSet(Hospital.class, "hospital");
            
            for(Hospital i : objList){
                Integer iD = i.getHospitalId();
                String name = i.getName();
                Integer locationId = i.getLocationId();
                String email = i.getEmailId(); 
                Integer contactNum = i.getContactNum(); 
                DefaultTableModel tblModel = (DefaultTableModel)hospitalJTable.getModel();
                Object[] obj = {iD, name, locationId, email, contactNum};
                tblModel.addRow(obj);                   
            }
            
        } catch (InstantiationException ex) {
            Logger.getLogger(HospitalPortal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        hospitalNameTextField = new javax.swing.JTextField();
        jLocationId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jEmailId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalJTable = new javax.swing.JTable();
        hospCreateBtn = new javax.swing.JButton();
        hospUpdateBtn = new javax.swing.JButton();
        hospDeleteBtn = new javax.swing.JButton();
        hospResetBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jContactNum = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        hospitalIdTextField = new javax.swing.JTextField();
        homePageBtn1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Hospital Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 198, 100, -1));
        getContentPane().add(hospitalNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 195, 151, -1));
        getContentPane().add(jLocationId, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 236, 151, -1));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 255));
        jLabel4.setText("Location ID");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 239, 100, -1));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 255));
        jLabel5.setText("Email");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 280, 100, -1));
        getContentPane().add(jEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 277, 151, -1));

        hospitalJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hospital ID", "Hospital Name", "Location ID", "Email", "Contact Number"
            }
        ));
        hospitalJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hospitalJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(hospitalJTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 628, 263));

        hospCreateBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        hospCreateBtn.setForeground(new java.awt.Color(0, 204, 255));
        hospCreateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon2/addpatient.png"))); // NOI18N
        hospCreateBtn.setText("CREATE");
        hospCreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospCreateBtnActionPerformed(evt);
            }
        });
        getContentPane().add(hospCreateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 429, 150, 60));

        hospUpdateBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        hospUpdateBtn.setForeground(new java.awt.Color(0, 204, 255));
        hospUpdateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon2/updatepatient.png"))); // NOI18N
        hospUpdateBtn.setText("UPDATE");
        hospUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospUpdateBtnActionPerformed(evt);
            }
        });
        getContentPane().add(hospUpdateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 429, 150, 60));

        hospDeleteBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        hospDeleteBtn.setForeground(new java.awt.Color(0, 204, 255));
        hospDeleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon2/deletepatient.png"))); // NOI18N
        hospDeleteBtn.setText("DELETE");
        hospDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospDeleteBtnActionPerformed(evt);
            }
        });
        getContentPane().add(hospDeleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(617, 429, 140, 60));

        hospResetBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        hospResetBtn.setForeground(new java.awt.Color(0, 204, 255));
        hospResetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon2/cross.png"))); // NOI18N
        hospResetBtn.setText("RESET");
        hospResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospResetBtnActionPerformed(evt);
            }
        });
        getContentPane().add(hospResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(787, 429, 130, 60));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 255));
        jLabel6.setText("Contact Number");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 315, -1, -1));
        getContentPane().add(jContactNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 312, 151, -1));

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 204, 255));
        jLabel7.setText("Hospital Id");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 157, 100, -1));
        getContentPane().add(hospitalIdTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 154, 151, -1));

        homePageBtn1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        homePageBtn1.setForeground(new java.awt.Color(0, 204, 255));
        homePageBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon2/backs.png"))); // NOI18N
        homePageBtn1.setText("BACK");
        homePageBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageBtn1ActionPerformed(evt);
            }
        });
        getContentPane().add(homePageBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 30, 140, 60));

        jLabel3.setFont(new java.awt.Font("Helvetica", 1, 40)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Hospital Management Portal");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 45, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hospCreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospCreateBtnActionPerformed
        // TODO add your handling code here:
        
        if(ValidationHelper.isEmptyOrNullString(hospitalNameTextField.getText())) {
            JOptionPane.showMessageDialog(this, "Hospital Name Case cannot be Empty.");
            return;
        }
        
        if(ValidationHelper.isEmptyOrNullString(jLocationId.getText())) {
            JOptionPane.showMessageDialog(this, "Loccation ID cannot be empty.");
            return;
        }
        
        if(ValidationHelper.isEmptyOrNullString(jEmailId.getText())) {
            JOptionPane.showMessageDialog(this, "Email ID cannot be left empty.");
            return;
        }
        
        if(ValidationHelper.isEmptyOrNullString(jContactNum.getText())) {
            JOptionPane.showMessageDialog(this, "Contact Number cannot be left empty.");
            return;
        }
        
        Map<String, String> idsMap = Stream.of(new String[][] {
                                    { "Location ID",  jLocationId.getText()}
                                }).collect(Collectors.toMap(data -> data[0], data -> data[1]));
        
        String invalidId = ValidationHelper.getInvalidNumericId(idsMap);
        
        if (!invalidId.isBlank()) {
            JOptionPane.showMessageDialog(this, "Please Enter a Valid Numeric " + invalidId);
            return;
        }
        
        
        String hospitalName = hospitalNameTextField.getText();
        Integer locationId = Integer.parseInt(jLocationId.getText());
        String email = jEmailId.getText();
        Integer contactNum = Integer.parseInt(jContactNum.getText());
        Integer hospitalId = 0;
        try {
            hospitalId = Helper.getMaxId("hospital", "hospital_id", null);
        } catch (SQLException ex) {
            Logger.getLogger(HospitalPortal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        DefaultTableModel tblModel = (DefaultTableModel)hospitalJTable.getModel();
        Object[] obj = {hospitalId, hospitalName, locationId, email, contactNum};
        tblModel.addRow(obj);
       
        Location loc = null;
        Hospital hospital = new Hospital(hospitalId, loc.getLocationId(), hospitalName, email, contactNum);
        hospital.addToHospitalTable(hospital);
        JOptionPane.showMessageDialog(this, "Hospital Saved Successfully!!!");
    }//GEN-LAST:event_hospCreateBtnActionPerformed

    private void hospitalJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hospitalJTableMouseClicked
        // TODO add your handling code here:
              
        DefaultTableModel hospTableModel = (DefaultTableModel) hospitalJTable.getModel();
        
        if(hospitalJTable.getSelectedRowCount() == 1) {
            
            String tblHospId = hospTableModel.getValueAt( hospitalJTable.getSelectedRow(),0).toString();
            String tblHospName = hospTableModel.getValueAt( hospitalJTable.getSelectedRow(),1).toString();
            String tblHospLocationId = hospTableModel.getValueAt( hospitalJTable.getSelectedRow(),2).toString();
            String tblHospEmail = hospTableModel.getValueAt( hospitalJTable.getSelectedRow(),3).toString();
            String tblHospContact = hospTableModel.getValueAt( hospitalJTable.getSelectedRow(),4).toString();


            hospitalIdTextField.setText(tblHospId);
            hospitalNameTextField.setText(tblHospName);
            jLocationId.setText(tblHospLocationId);
            jEmailId.setText(tblHospEmail);
            jContactNum.setText(tblHospContact);
        }
        
        
    }//GEN-LAST:event_hospitalJTableMouseClicked

    private void hospUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospUpdateBtnActionPerformed
        // TODO add your handling code here:
        
        if(ValidationHelper.isEmptyOrNullString(hospitalNameTextField.getText())) {
            JOptionPane.showMessageDialog(this, "Hospital Name Case cannot be Empty.");
            return;
        }
        
        if(ValidationHelper.isEmptyOrNullString(jLocationId.getText())) {
            JOptionPane.showMessageDialog(this, "Loccation ID cannot be empty.");
            return;
        }
        
        if(ValidationHelper.isEmptyOrNullString(jEmailId.getText())) {
            JOptionPane.showMessageDialog(this, "Email ID cannot be left empty.");
            return;
        }
        
        if(ValidationHelper.isEmptyOrNullString(jContactNum.getText())) {
            JOptionPane.showMessageDialog(this, "Contact Number cannot be left empty.");
            return;
        }
        
        Map<String, String> idsMap = Stream.of(new String[][] {
                                    { "Location ID",  jLocationId.getText()}
                                }).collect(Collectors.toMap(data -> data[0], data -> data[1]));
        
        String invalidId = ValidationHelper.getInvalidNumericId(idsMap);
        
        if (!invalidId.isBlank()) {
            JOptionPane.showMessageDialog(this, "Please Enter a Valid Numeric " + invalidId);
            return;
        }
        
        DefaultTableModel tblModel = (DefaultTableModel)hospitalJTable.getModel();
        
        
        if (hospitalJTable.getSelectedRowCount() == 1){
            
            Integer hospitalId = Integer.valueOf(tblModel.getValueAt(hospitalJTable.getSelectedRow(), 0).toString()); 
            String hospitalName = hospitalNameTextField.getText(); 
            Integer loccationId = Integer.valueOf(jLocationId.getText()); 
            String email = jEmailId.getText();
            Integer contactNum = Integer.valueOf(jContactNum.getText()); 
            
           
            tblModel.setValueAt(hospitalName, hospitalJTable.getSelectedRow(), 1);
            tblModel.setValueAt(loccationId, hospitalJTable.getSelectedRow(), 2);
            tblModel.setValueAt(email, hospitalJTable.getSelectedRow(), 3);
            tblModel.setValueAt(contactNum, hospitalJTable.getSelectedRow(), 4);
            
            Map<String, String> mp = new HashMap<>();
            mp.put("name", String.valueOf(hospitalName));
            mp.put("locationid", String.valueOf(loccationId));
            mp.put("email", String.valueOf(email));
            mp.put("contactno", String.valueOf(contactNum));
            
            try {
                Helper.updateColumns("hospital", mp, "hospital_id = " + hospitalId);
            } 
            
            catch (SQLException ex) {
                System.out.println("Failed");
                Logger.getLogger(HospitalPortal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            tblModel.setRowCount(0);
            
            try {
          
            List<Hospital> objList = Helper.getResultSet(Hospital.class, "hospital");
            
            for(Hospital i : objList){
                Integer iD = i.getHospitalId();
                String name = i.getName();
                Integer locationId = i.getLocationId();
                String emailId = i.getEmailId(); 
                Integer contactNo = i.getContactNum(); 
                Object[] obj = {iD, name, locationId, emailId, contactNo};
                tblModel.addRow(obj);                   
            }
            
        } catch (InstantiationException ex) {
            Logger.getLogger(HospitalPortal.class.getName()).log(Level.SEVERE, null, ex);
        }
           
        }
        
    }//GEN-LAST:event_hospUpdateBtnActionPerformed

    private void hospDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospDeleteBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel)hospitalJTable.getModel();
        if(hospitalJTable.getSelectedRowCount() == 1){
            
            Integer hospitalId = Integer.valueOf(tblModel.getValueAt(hospitalJTable.getSelectedRow(), 0).toString()); 
            tblModel.removeRow(hospitalJTable.getSelectedRow());
            
            Helper.insertDeleteData("delete from hospital where hospital_id = " + hospitalId);
            
          }
       
        
    }//GEN-LAST:event_hospDeleteBtnActionPerformed

    public void resetAllFields() {
        hospitalIdTextField.setText(null);
        hospitalNameTextField.setText(null);
        jLocationId.setText(null);
        jEmailId.setText(null);
        jContactNum.setText(null);
    }
    
    private void hospResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospResetBtnActionPerformed
        // TODO add your handling code here:
        resetAllFields();
    }//GEN-LAST:event_hospResetBtnActionPerformed

    private void homePageBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageBtn1ActionPerformed
        
        SysAdminJFrame1 obj = new SysAdminJFrame1();
        obj.setVisible(true);
        obj.setExtendedState(JFrame.MAXIMIZED_BOTH );
        dispose();
        
    }//GEN-LAST:event_homePageBtn1ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HospitalPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HospitalPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HospitalPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HospitalPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HospitalPortal().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton homePageBtn1;
    private javax.swing.JButton hospCreateBtn;
    private javax.swing.JButton hospDeleteBtn;
    private javax.swing.JButton hospResetBtn;
    private javax.swing.JButton hospUpdateBtn;
    private javax.swing.JTextField hospitalIdTextField;
    private javax.swing.JTable hospitalJTable;
    private javax.swing.JTextField hospitalNameTextField;
    private javax.swing.JTextField jContactNum;
    private javax.swing.JTextField jEmailId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jLocationId;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
