/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MedicalDepartment;

import PoliceDepartment.Case;
//import PoliceDepartment.Do;
import PoliceDepartment.Precinct;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Doctor;
import model.Hospital;
import model.Location;
import utilPackage.Helper;
import utilPackage.SendNotification;

/**
 *
 * @author bashu
 */
public class DoctorManagementPortal extends javax.swing.JFrame {

    /**
     * Creates new form HospitalJFrame
     */
    public DoctorManagementPortal() throws SQLException {
        initComponents();
        doctorId.disable();
        List<Doctor> objList = null;
        try {
            objList = Helper.fetchAllDoctors();
        } catch (ParseException ex) {
            Logger.getLogger(DoctorManagementPortal.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(Doctor i : objList){
            Integer iD = i.getDoctorId();
            String name = i.getName();
            Integer hospitalId = i.getHospitalId();
            String email = i.getEmail();
            Integer phone = (int) i.getPhoneNo();
            Integer locationId = i.getAddress();
            String bloodGroup = i.getBloodGroup();
            String gender = i.getGender();
            
            DefaultTableModel tblModel = (DefaultTableModel)doctorJTable.getModel();
            Object[] obj = {iD, name, hospitalId, email, phone, locationId, bloodGroup, gender};
            tblModel.addRow(obj);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jDocName = new javax.swing.JTextField();
        jHospitalId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jEmail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        doctorJTable = new javax.swing.JTable();
        hospCreateBtn = new javax.swing.JButton();
        hospUpdateBtn = new javax.swing.JButton();
        hospDeleteBtn = new javax.swing.JButton();
        hospResetBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        doctorId = new javax.swing.JTextField();
        homePageBtn = new javax.swing.JButton();
        homePageBtn1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jAddress = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jBloodGroup = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jGender = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Doctor Name");

        jLabel4.setText("Hospital ID");

        jLabel5.setText("Email");

        doctorJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor ID", "Name", "Hospital ID", "Email", "Phone", "Address", "Blood Group", "Gender"
            }
        ));
        doctorJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doctorJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(doctorJTable);

        hospCreateBtn.setText("CREATE");
        hospCreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospCreateBtnActionPerformed(evt);
            }
        });

        hospUpdateBtn.setText("UPDATE");
        hospUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospUpdateBtnActionPerformed(evt);
            }
        });

        hospDeleteBtn.setText("DELETE");
        hospDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospDeleteBtnActionPerformed(evt);
            }
        });

        hospResetBtn.setText("RESET");
        hospResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospResetBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Phone Number");

        jLabel7.setText("Doctor Id");

        homePageBtn.setText("HOME");
        homePageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageBtnActionPerformed(evt);
            }
        });

        homePageBtn1.setText("BACK");
        homePageBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageBtn1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Helvetica", 1, 40)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Doctor Management Portal");

        jLabel8.setText("Address");

        jLabel9.setText("Blood Group");

        jLabel13.setText("Gender");

        jGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(doctorId, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDocName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel13))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jBloodGroup, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(jAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(jEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(jHospitalId, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(jPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(jGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 190, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(133, 133, 133)
                        .addComponent(homePageBtn)
                        .addGap(18, 18, 18)
                        .addComponent(homePageBtn1)
                        .addGap(172, 172, 172))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hospCreateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hospUpdateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hospDeleteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hospResetBtn)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(homePageBtn)
                            .addComponent(homePageBtn1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(doctorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jDocName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jHospitalId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospCreateBtn)
                    .addComponent(hospUpdateBtn)
                    .addComponent(hospResetBtn)
                    .addComponent(hospDeleteBtn))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hospCreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospCreateBtnActionPerformed
        // TODO add your handling code here:
        String docName = jDocName.getText();
        Integer hospitalId = Integer.parseInt(jHospitalId.getText());
        String email = jEmail.getText();
        Long phone = Long.parseLong(jPhone.getText());
        Integer address = Integer.parseInt(jAddress.getText());
        String bloodGroup = jBloodGroup.getText();
        String gender = jGender.getSelectedItem().toString();
        Integer doctorId = 0;
        try {
            doctorId = Helper.getMaxId("doctor", "doctor_id", null);
        } catch (SQLException ex) {
            //Logger.getLogger(CasePortal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        DefaultTableModel tblModel = (DefaultTableModel)doctorJTable.getModel();
        Object[] obj = {doctorId, docName, hospitalId, email, phone, address, bloodGroup, gender};
        tblModel.addRow(obj);
       
        Doctor doc = new Doctor(docName, address, email, phone, null, doctorId, bloodGroup, "Doctor", gender, doctorId, hospitalId);
        doc.addToDoctorTable(doc);
        JOptionPane.showMessageDialog(this, "Doctor Saved Successfully!!!");
    }//GEN-LAST:event_hospCreateBtnActionPerformed

    private void doctorJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doctorJTableMouseClicked
        // TODO add your handling code here:
              
        DefaultTableModel docTableModel = (DefaultTableModel) doctorJTable.getModel();
        
        if(doctorJTable.getSelectedRowCount() == 1) {
            
            String tblDoctorId = docTableModel.getValueAt( doctorJTable.getSelectedRow(),0).toString();
            String tblName = docTableModel.getValueAt( doctorJTable.getSelectedRow(),1).toString();
            String tblHospId = docTableModel.getValueAt( doctorJTable.getSelectedRow(),2).toString();
            String tblEmail = docTableModel.getValueAt( doctorJTable.getSelectedRow(),3).toString();
            String tblPhone = docTableModel.getValueAt( doctorJTable.getSelectedRow(),4).toString();
            String tblAddress = docTableModel.getValueAt( doctorJTable.getSelectedRow(),5).toString();
            String tblBloodGroup = docTableModel.getValueAt( doctorJTable.getSelectedRow(),6).toString();
            String tblGender = docTableModel.getValueAt( doctorJTable.getSelectedRow(),7).toString();


            doctorId.setText(tblDoctorId);
            jDocName.setText(tblName);
            jHospitalId.setText(tblHospId);
            jEmail.setText(tblEmail);
            jPhone.setText(tblPhone);
            jAddress.setText(tblAddress);
            jBloodGroup.setText(tblBloodGroup);
            jGender.setSelectedItem(tblGender);
        }
        
        
    }//GEN-LAST:event_doctorJTableMouseClicked

    private void hospUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospUpdateBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel)doctorJTable.getModel();
        
        
        if (doctorJTable.getSelectedRowCount() == 1){
            
            Integer doctorId = Integer.valueOf(tblModel.getValueAt(doctorJTable.getSelectedRow(), 0).toString()); 
            String docName = jDocName.getText(); 
            Integer hospitalId = Integer.valueOf(jHospitalId.getText()); 
            Integer locationId = Integer.valueOf(jAddress.getText()); 
            String email = jEmail.getText();
            Integer phone = Integer.valueOf(jPhone.getText()); 
            String bloodGroup = jBloodGroup.getText();
            String gender = jGender.getSelectedItem().toString();
            
           
            tblModel.setValueAt(docName, doctorJTable.getSelectedRow(), 1);
            tblModel.setValueAt(hospitalId, doctorJTable.getSelectedRow(), 2);
            tblModel.setValueAt(email, doctorJTable.getSelectedRow(), 3);
            tblModel.setValueAt(phone, doctorJTable.getSelectedRow(), 4);
            tblModel.setValueAt(locationId, doctorJTable.getSelectedRow(), 5);
            tblModel.setValueAt(bloodGroup, doctorJTable.getSelectedRow(), 6);
            tblModel.setValueAt(gender, doctorJTable.getSelectedRow(), 7);
            
            Map<String, String> personUpdMap = new HashMap<>();
            personUpdMap.put("name", String.valueOf(docName));
            personUpdMap.put("location_id", String.valueOf(locationId));
            personUpdMap.put("email", String.valueOf(email));
            personUpdMap.put("phone_no", String.valueOf(phone));
            personUpdMap.put("blood_group", String.valueOf(bloodGroup));
            personUpdMap.put("gender", String.valueOf(gender));
            
            Map<String, String> doctorUpdMap = new HashMap<>();
            doctorUpdMap.put("hospital_id", String.valueOf(hospitalId));
            
            try {
                Helper.updateColumns("person", personUpdMap, "person_id = " + doctorId);
                Helper.updateColumns("doctor", doctorUpdMap, "doctor_id = " + doctorId);
            } 
            
            catch (SQLException ex) {
                System.out.println("Failed");
                Logger.getLogger(DoctorManagementPortal.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        }
        
    }//GEN-LAST:event_hospUpdateBtnActionPerformed

    private void hospDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospDeleteBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel)doctorJTable.getModel();
        if(doctorJTable.getSelectedRowCount() == 1){
            
            Integer doctorId = Integer.valueOf(tblModel.getValueAt(doctorJTable.getSelectedRow(), 0).toString()); 
            tblModel.removeRow(doctorJTable.getSelectedRow());
            
            Helper.insertDeleteData("delete from doctor where doctor_id = " + doctorId);
            Helper.insertDeleteData("delete from person where person_id = " + doctorId);
            
          }
       
        
    }//GEN-LAST:event_hospDeleteBtnActionPerformed

    public void resetAllFields() {
        doctorId.setText(null);
        jDocName.setText(null);
        jHospitalId.setText(null);
        jEmail.setText(null);
        jPhone.setText(null);
        jAddress.setText(null);
        jBloodGroup.setText(null);
        jGender.setSelectedItem(null);
    }
    
    private void hospResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospResetBtnActionPerformed
        // TODO add your handling code here:
        resetAllFields();
    }//GEN-LAST:event_hospResetBtnActionPerformed

    private void homePageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageBtnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_homePageBtnActionPerformed

    private void homePageBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_homePageBtn1ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorManagementPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorManagementPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorManagementPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorManagementPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DoctorManagementPortal().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(DoctorManagementPortal.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField doctorId;
    private javax.swing.JTable doctorJTable;
    private javax.swing.JButton homePageBtn;
    private javax.swing.JButton homePageBtn1;
    private javax.swing.JButton hospCreateBtn;
    private javax.swing.JButton hospDeleteBtn;
    private javax.swing.JButton hospResetBtn;
    private javax.swing.JButton hospUpdateBtn;
    private javax.swing.JTextField jAddress;
    private javax.swing.JTextField jBloodGroup;
    private javax.swing.JTextField jDocName;
    private javax.swing.JTextField jEmail;
    private javax.swing.JComboBox<String> jGender;
    private javax.swing.JTextField jHospitalId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jPhone;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
