/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PoliceDepartment;

/**
 *
 * @author sahilpadyal
 */

import java.awt.Image;
import java.io.File;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import utilPackage.Helper;
import utilPackage.S3BucketOperations;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.CitizenStatus;
import model.Evidence;
import utilPackage.ResultSetMapper;
public class CitizenStatusPortal extends javax.swing.JFrame {

    /**
     * Creates new form mainPoliceDept
     */
    Integer currentCaseId;
    public CitizenStatusPortal() {
        initComponents();
        
        jEvidenceId.disable();
        
        try {
          
            List<Evidence> evidenceList = Helper.getResultSet(Evidence.class, "evidence");
            
            if(evidenceList != null) {
                for(Evidence i : evidenceList){
                    Integer evidenceId = i.getEvidenceId();
                    Integer caseId = i.getCaseId();
                    String description = i.getDescription();
                    DefaultTableModel tblModel = (DefaultTableModel)jEvidenceTable.getModel();
                    Object[] obj = {evidenceId, caseId, description};
                    tblModel.addRow(obj);                   
                }
            }
            
            
        } catch (InstantiationException ex) {
            Logger.getLogger(CasePortalCaptain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEvidenceTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jDelete = new javax.swing.JButton();
        jUpdateButton = new javax.swing.JButton();
        createEvidence = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jImagePath = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCaseId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jStatus = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jWantedLevel = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 223, Short.MAX_VALUE)
        );

        jEvidenceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status ID", "Person ID", "Status", "Case ID", "Wanted Level"
            }
        ));
        jEvidenceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jEvidenceTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jEvidenceTable);

        jButton4.setText("Reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jDelete.setText("Delete");
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });

        jUpdateButton.setText("Update");
        jUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateButtonActionPerformed(evt);
            }
        });

        createEvidence.setText("Create");
        createEvidence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEvidenceActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Background Data");

        jLabel2.setText("Case ID");

        jCaseId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCaseIdActionPerformed(evt);
            }
        });

        jLabel8.setText("Wanted Level");

        jStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Suspect", "Victim", "Witness", " " }));

        jLabel6.setText("Status");

        jWantedLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(173, 173, 173)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(createEvidence)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jUpdateButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jDelete)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCaseId, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jWantedLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(jImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(127, 127, 127)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jCaseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel6))
                                                .addGap(21, 21, 21)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(createEvidence)
                                                    .addComponent(jUpdateButton)
                                                    .addComponent(jDelete)
                                                    .addComponent(jButton4)))
                                            .addComponent(jWantedLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(223, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteActionPerformed

        DefaultTableModel tblModel = (DefaultTableModel)jEvidenceTable.getModel();
        if(jEvidenceTable.getSelectedRowCount() == 1){
            Integer evidenceId = Integer.valueOf(tblModel.getValueAt(jEvidenceTable.getSelectedRow(), 1).toString());
            tblModel.removeRow(jEvidenceTable.getSelectedRow());
            Helper.insertDeleteData("delete from evidence where evidence_id = " + evidenceId);
            resetAllFields();
        }

    }//GEN-LAST:event_jDeleteActionPerformed

    private void jUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateButtonActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jEvidenceTable.getModel();
        
        if (jEvidenceTable.getSelectedRowCount() == 1){

            Integer caseId = Integer.valueOf(tblModel.getValueAt(jEvidenceTable.getSelectedRow(), 1).toString());
            if(caseId != Integer.parseInt(jCaseId.getText())) {
                JOptionPane.showMessageDialog(this, "Case ID for an Evidence cannot be updated.");
                return;
            }
            
            String desc = jWantedLevel.getText();
            String imagePath = jImagePath.getName();
            
            Integer evidenceId = Integer.valueOf(jEvidenceId.getText());
            
            Map<String, String> mp = new HashMap<>();
            mp.put("description", desc);
            mp.put("IMAGEPATH", imagePath);
            
            try {
                Helper.updateColumns("evidence", mp, "evidence_id = " + evidenceId);
            }
            catch (SQLException ex) {
                System.out.println("Failed");
                Logger.getLogger(CasePortalCaptain.class.getName()).log(Level.SEVERE, null, ex);
            }

            tblModel.setRowCount(0);

            try {
                    List<Evidence> evidenceList = null;
                    if(currentCaseId != null) {
                        evidenceList = Helper.getResultSetByConditionId(Evidence.class, "evidence", "case_id", currentCaseId);
                    } else {
                       evidenceList = Helper.getResultSet(Evidence.class, "evidence"); 
                    }
                    if(evidenceList != null) {
                        for(Evidence i : evidenceList){
                            Integer evId = i.getEvidenceId();
                            Integer casId = i.getCaseId();
                            String objDesc = i.getDescription();
                            Object[] obj = {evId, casId, objDesc};
                            tblModel.addRow(obj);   
                        }
                }
            } catch (InstantiationException ex) {
                Logger.getLogger(CasePortalCaptain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jUpdateButtonActionPerformed

    private void createEvidenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEvidenceActionPerformed
        String caseId = jCaseId.getText(); 
        Integer wantedLevel = Integer.parseInt(jWantedLevel.getSelectedItem().toString());
        String status = jStatus.getSelectedItem().toString().toString();
        
        CitizenStatus cs = null; 
        
        
        

    }//GEN-LAST:event_createEvidenceActionPerformed

    public void resetAllFields() {
        jEvidenceId.setText(null);
        jCaseId.setText("");
        jWantedLevel.setText("");
        imageLabel.setIcon(null);
    }
    
    private void jEvidenceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jEvidenceTableMouseClicked
        // TODO add your handling code here:
        resetAllFields();
        DefaultTableModel tblModel = (DefaultTableModel)jEvidenceTable.getModel(); 
        if(jEvidenceTable.getSelectedRowCount() == 1){
            
            Integer evidenceId = Integer.parseInt(tblModel.getValueAt(jEvidenceTable.getSelectedRow(), 0).toString());
            jWantedLevel.setText(tblModel.getValueAt(jEvidenceTable.getSelectedRow(), 2).toString());
            jCaseId.setText(tblModel.getValueAt(jEvidenceTable.getSelectedRow(), 1).toString());
            jEvidenceId.setText(tblModel.getValueAt(jEvidenceTable.getSelectedRow(), 0).toString());
            
            List<Evidence> evidenceList = new ArrayList<>();
            try {
                evidenceList = Helper.getResultSetByConditionId(Evidence.class, "evidence", "evidence_id", evidenceId);
            } catch (InstantiationException ex) {
                Logger.getLogger(CitizenStatusPortal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if(evidenceList.size() == 1 && evidenceList.get(0).getImagePath() != null) {
                jImagePath.setName(evidenceList.get(0).getImagePath());
                ImageIcon imgIcon = new ImageIcon(evidenceList.get(0).getImagePath());
                Image img = imgIcon.getImage();
                Image scaledImage = img.getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon scaledImgIcon = new ImageIcon(scaledImage);
                imageLabel.setIcon(scaledImgIcon);
            }
            
        }
    }//GEN-LAST:event_jEvidenceTableMouseClicked

    private void jCaseIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCaseIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCaseIdActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        resetAllFields();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CitizenStatusPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CitizenStatusPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CitizenStatusPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CitizenStatusPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CitizenStatusPortal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createEvidence;
    private javax.swing.JButton jButton4;
    private javax.swing.JTextField jCaseId;
    private javax.swing.JButton jDelete;
    private javax.swing.JTable jEvidenceTable;
    private javax.swing.JLabel jImagePath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jStatus;
    private javax.swing.JButton jUpdateButton;
    private javax.swing.JComboBox<String> jWantedLevel;
    // End of variables declaration//GEN-END:variables
}
